# Generated by Django 4.0.3 on 2022-05-19 03:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=25, null=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('bio', models.TextField(null=True)),
                ('avatar', models.ImageField(default='avatar.svg', null=True, upload_to='')),
                ('role', models.IntegerField(choices=[(0, 'Guest'), (1, 'Distributor'), (2, 'Sungrow'), (3, 'ADMIN'), (4, 'SUPER USER')], default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SparePartGood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partCode', models.CharField(blank=True, max_length=10, null=True)),
                ('goodStatus', models.CharField(choices=[('good', 'Good'), ('new', 'New'), ('Fail', 'Fail'), ('scrap', 'Scrap'), ('nan', 'Nan')], default=None, max_length=5)),
                ('sparePartType', models.CharField(choices=[('Product', 'Product'), ('Spare', 'Sparepart')], default=None, max_length=7)),
                ('csceHWMO', models.CharField(choices=[('Central inverter', 'Central'), ('string inverter', 'String'), ('Comunication device', 'Commu'), ('ESS', 'Ess'), ('Hybird  inverter', 'Hybrid'), (' wind Converter', 'Wind'), ('MV device', 'Mv'), ('Other', 'Other')], default='Other', max_length=20)),
                ('serialNumber', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('productDescription', models.CharField(blank=True, max_length=100, null=True)),
                ('deliverDate', models.DateField(blank=True, max_length=10, null=True)),
                ('warehouse', models.CharField(choices=[('HN', 'Hn'), ('DN', 'Dn'), ('KH', 'Kh'), ('HCM', 'Hcm')], default=None, max_length=3)),
                ('sender', models.CharField(blank=True, max_length=20, null=True)),
                ('invoice', models.CharField(blank=True, max_length=20, null=True)),
                ('batch', models.CharField(blank=True, max_length=20, null=True)),
                ('transitWay', models.CharField(blank=True, max_length=20, null=True)),
                ('remark', models.CharField(blank=True, max_length=100, null=True)),
                ('actualQTY', models.IntegerField(blank=True, null=True)),
                ('consumQTY', models.IntegerField(blank=True, null=True)),
                ('remainQTY', models.IntegerField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(upload_to='fileupload')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='SparePartOutRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('outqty', models.IntegerField(blank=True, null=True)),
                ('outDate', models.DateField(blank=True, null=True)),
                ('outReceiver', models.CharField(blank=True, max_length=20, null=True)),
                ('outRemark', models.CharField(blank=True, max_length=20, null=True)),
                ('file', models.FileField(null=True, upload_to='filerequest')),
                ('role', models.IntegerField(choices=[(0, 'Waitting'), (1, 'Submited')], default=0)),
                ('sparePartGoodOut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.sparepartgood')),
                ('userOutRequestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='SparePartOutRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('outqty', models.IntegerField(blank=True, null=True)),
                ('outDate', models.DateField(blank=True, null=True)),
                ('outReceiver', models.CharField(blank=True, max_length=20, null=True)),
                ('outGSP', models.CharField(blank=True, default='waiting', max_length=20, null=True)),
                ('outRemark', models.CharField(blank=True, max_length=20, null=True)),
                ('file', models.FileField(null=True, upload_to='filerecord')),
                ('sparePartGoodOut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.sparepartgood')),
                ('userOutRequestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated', '-created'],
            },
        ),
    ]
